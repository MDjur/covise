<_Bump><uniform name="Bumpiness" type="float" value="1"/><uniform name="diffuseMap" type="sampler2D" value="0"/><uniform name="normalMap" type="sampler2D" value="1"/><attribute name="aBinormal" type="binormal" value="6"/><attribute name="aTangent" type="tangent" value="7"/><vertexProgram>varying vec3 normal, lightDir, eyeVec;
    varying vec3 Binormal;
    varying vec3 Tangent;
    varying vec2 Texcoord;
  
    attribute vec3 aBinormal;
    attribute vec3 aTangent;
     
    uniform float Bumpiness;
    uniform int Time;

    void main( void )
    {
        normal   = gl_NormalMatrix * gl_Normal;
        Binormal = gl_NormalMatrix * aBinormal;
        Tangent  = gl_NormalMatrix * aTangent; 
        Texcoord = gl_MultiTexCoord0.xy;
        vec4 Vertex = gl_Vertex;
        Vertex[1] +=10* sin(float(Time)/1000.0 + Vertex[0]*10);
     	vec4 vVertex = gl_ModelViewMatrix *Vertex ;
     	lightDir = vec3(gl_LightSource[0].position.xyz - vec3(vVertex));
     	eyeVec = -vec3(vVertex);
                         gl_ClipVertex = vVertex;
	gl_Position =gl_ProjectionMatrix * vVertex;	
    }
  </vertexProgram><fragmentProgram>    varying vec3 normal, lightDir, eyeVec;
    varying vec3 Binormal;
    varying vec3 Tangent;
    varying vec2 Texcoord;
   
    uniform float Bumpiness;
    uniform sampler2D diffuseMap;
    uniform sampler2D normalMap;
    uniform sampler2D lightMap;
   
    void main( void )
    {
       float n = 10;
       vec4 Il = vec4(1,1,1,1);
       vec4 Ka = vec4(0.2,0.2,0.2,1);
       vec4 Kd = vec4(1,0.2,0.3,1);
       vec4 Ks = vec4(1,1,1,1);
       vec4 I;
       vec4 Id;
       vec4 Ia = vec4(0,0,0,1);
       vec4 Is = vec4(0,0,0,1);
      vec3 N = normalize(normal);
      vec3 L = normalize(lightDir);
      vec3 H;
      vec3 R;
      vec3 B;
      B = normalize(eyeVec);
      H = normalize(B + L);
      R = reflect(-L,N);
      float sp = dot(R,B);
      sp = max(sp,0.0);
      Is = Ks *Il * pow(sp,n);
      Id = Kd *Il* max(dot(N,L),0) ;
      Ia = Ka *Il;
       I = Id + Ia + Is;
         gl_FragColor = I;
    }
  </fragmentProgram></_Bump>