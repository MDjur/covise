# - Find MIDIFILE
# Find the MIDIFILE includes and library
#
#  MIDIFILE_INCLUDE_DIR - Where to find MIDIFILE includes
#  MIDIFILE_LIBRARIES   - List of libraries when using MIDIFILE
#  MIDIFILE_FOUND       - True if MIDIFILE was found

IF(MIDIFILE_INCLUDE_DIR)
  SET(MIDIFILE_FIND_QUIETLY TRUE)
ENDIF(MIDIFILE_INCLUDE_DIR)

FIND_PATH(MIDIFILE_INCLUDE_DIR "MidiFile.h"
  PATHS
  $ENV{MIDIFILE_HOME}/include
  $ENV{EXTERNLIBS}/midifile/include
  ~/Library/Frameworks/include
  /Library/Frameworks/include
  /usr/local/include
  /usr/include
  /sw/include # Fink
  /opt/local/include # DarwinPorts
  /opt/csw/include # Blastwave
  /opt/include
  DOC "MIDIFILE - Headers"
)

SET(MIDIFILE_NAMES midifile)
SET(MIDIFILE_DBG_NAMES midifiled)

FIND_LIBRARY(MIDIFILE_LIBRARY NAMES ${MIDIFILE_NAMES}
  PATHS
  $ENV{MIDIFILE_HOME}
  $ENV{EXTERNLIBS}/midifile
  ~/Library/Frameworks
  /Library/Frameworks
  /usr/local
  /usr
  /sw
  /opt/local
  /opt/csw
  /opt
  PATH_SUFFIXES lib lib64
  DOC "MidiFile - Library"
)

INCLUDE(FindPackageHandleStandardArgs)

IF(MSVC)
  # VisualStudio needs a debug version
  FIND_LIBRARY(MIDIFILE_LIBRARY_DEBUG NAMES ${MIDIFILE_DBG_NAMES}
    PATHS
    $ENV{MIDIFILE_HOME}/lib
    $ENV{EXTERNLIBS}/midifile/lib
    DOC "MIDIFILE - Library (Debug)"
  )
  
  IF(MIDIFILE_LIBRARY_DEBUG AND MIDIFILE_LIBRARY)
    SET(MIDIFILE_LIBRARIES optimized ${MIDIFILE_LIBRARY} debug ${MIDIFILE_LIBRARY_DEBUG})
  ENDIF(MIDIFILE_LIBRARY_DEBUG AND MIDIFILE_LIBRARY)

  FIND_PACKAGE_HANDLE_STANDARD_ARGS(MIDIFILE DEFAULT_MSG MIDIFILE_LIBRARY MIDIFILE_LIBRARY_DEBUG MIDIFILE_INCLUDE_DIR)

  MARK_AS_ADVANCED(MIDIFILE_LIBRARY MIDIFILE_LIBRARY_DEBUG MIDIFILE_INCLUDE_DIR)
  
ELSE(MSVC)
  # rest of the world
  SET(MIDIFILE_LIBRARIES ${MIDIFILE_LIBRARY})

  FIND_PACKAGE_HANDLE_STANDARD_ARGS(MIDIFILE DEFAULT_MSG MIDIFILE_LIBRARY MIDIFILE_INCLUDE_DIR)
  
  MARK_AS_ADVANCED(MIDIFILE_LIBRARY MIDIFILE_INCLUDE_DIR)
  
ENDIF(MSVC)

IF(MIDIFILE_FOUND)
  SET(MIDIFILE_INCLUDE_DIRS ${MIDIFILE_INCLUDE_DIR})
ENDIF(MIDIFILE_FOUND)
