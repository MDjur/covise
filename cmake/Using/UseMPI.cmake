MACRO(USE_MPI)
  IF (COVISE_USE_MPI)
    COVISE_FIND_PACKAGE(MPI COMPONENTS C CXX)
    IF ((NOT MPI_FOUND) AND (${ARGC} LESS 1))
      USING_MESSAGE("Skipping because of missing MPI")
      RETURN()
    ENDIF((NOT MPI_FOUND) AND (${ARGC} LESS 1))
    IF(NOT MPI_USED AND MPI_FOUND)
      SET(MPI_USED TRUE)
      ADD_DEFINITIONS(-DHAS_MPI)
      INCLUDE_DIRECTORIES(SYSTEM ${MPI_INCLUDE_PATH})
      SET(EXTRA_LIBS ${EXTRA_LIBS} ${MPI_C_LINK_FLAGS} ${MPI_LIBRARIES})
      SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${MPI_FLAGS}")
      SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${MPI_FLAGS}")
      if(CMAKE_COMPILER_IS_GNUCXX)
        # for OpenMPI on Ubuntu 15.04 & 15.10 in C++11 mode
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-error=literal-suffix")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-error=literal-suffix")
      endif()
    ENDIF()
  ELSE(COVISE_USE_MPI)
    IF (${ARGC} LESS 1)
        RETURN()
    ENDIF()
  ENDIF(COVISE_USE_MPI)
ENDMACRO(USE_MPI)

